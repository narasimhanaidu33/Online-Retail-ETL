x-airflow-common: &airflow-common
  image: apache/airflow:2.6.3
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: "6V51UhVCyzU9kdHCdGbnWtu-t-BmfkJlygNBAw2W3to="
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth"
    _PIP_ADDITIONAL_REQUIREMENTS: pyspark==3.4.0 apache-airflow-providers-apache-spark==4.1.0
  volumes:
    - ./dags:/opt/airflow/dags
    - ./spark_jobs:/opt/airflow/spark_jobs
    - ./data:/opt/airflow/data
    - ./logs:/opt/airflow/logs
    - ./config:/opt/airflow/config
    - ./jars:/opt/airflow/jars
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_started
    spark-master:
      condition: service_started

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data-volume:/data

  airflow-init:
    <<: *airflow-common
    command: bash -c "airflow db init"
    depends_on:
      postgres:
        condition: service_healthy

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8082:8080" # Changed from 8080 to avoid conflicts
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    restart: always

  spark-master:
    image: bitnami/spark:3.4
    ports:
      - "8081:8080" # Spark UI
      - "7077:7077" # Spark master port
    environment:
      - SPARK_MODE=master
    volumes:
      - ./spark_jobs:/jobs
      - ./data:/data

  spark-worker:
    image: bitnami/spark:3.4
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - ./spark_jobs:/jobs
      - ./data:/data

volumes:
  postgres-db-volume:
  redis-data-volume:

networks:
  default:
    name: airflow-network
    driver: bridge
